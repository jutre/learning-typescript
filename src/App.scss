/*this will be base for padding or margin. Other margin or padding value will be double of this value*/
$margin_or_padding_base: 15px;

$mobile-breakpoint:400px;
$header-height:80px;
$button-padding:10px;
$modal-border-radius:10px;

$link_color:blue;
$link_hover_color:rgb(149, 149, 149);


//"button-appearance" mixin can't be used for buttons with svg masks, but we need background values also there
$button_background_color: rgb(70, 170, 233);
$button_hover_background_color: rgb(0, 118, 192);

@mixin button-appearance{
    border-width: 0px;
    border-radius: $modal-border-radius;
    color: white;
    background-color: $button_background_color;
    background-clip: border-box;
    cursor: pointer;
    padding: $button-padding;

    //&.button_confirm{
        &:hover{
            background-color: rgb(0, 118, 192);
        }
    //}
}



*{
    box-sizing:border-box;
}

body, h1, h2, h3, h4, h5, h6{
    margin: 0;
}

body{
    background-color: #eeeeee;
    
}


body, a, input, textarea{
    color: rgb(31, 41, 55);
    text-decoration: none;
    font-family: 'Arial';
    font-weight: 400;
    font-size: 16px;
}

a{
    &:hover{
        color: $link_hover_color; 
    }
}


h1, h2, h3{
    margin-bottom: $margin_or_padding_base * 2;
}

.root_container{
    display: flex; 
    flex-direction: column;
    //book forms are short, make content column with it's background span till end of browser window 
    //with combination of flex-grow of ".content_wrapper" element 
    min-height: 100vh;
}

.header{
    background-color: rgba(141, 148, 157, 0.5);
    padding: $margin_or_padding_base * 2 $margin_or_padding_base;
}

.error{
    color: red;
    border: 1px solid red;
    border-radius: 10px;
    padding: 10px;
    display: inline-block; //prevent spanning to whole available width
    
}

//class for element that wraps around content for creating central column 
.layout_wrapper{
    

    @media screen and (min-width: $mobile-breakpoint) {
        margin:0 $margin_or_padding_base;
    }

    @media screen and (min-width: 1024px) {     
        width: 1000px;
        margin:0 auto;
    }
}

//class for element that wraps around content for creating padding, background for content
.content_wrapper{
    background-color: white;
    padding: $margin_or_padding_base * 2  $margin_or_padding_base;
    //make content column with it's background span till end of containing element (which spans at least to window bottom)
    flex: 1 1 auto;
}

.navigation{
    padding-bottom: $margin_or_padding_base * 2;

    a{
        
        text-transform: uppercase;
        font-weight: bold;
        
        &::before{
            content: "";
            background-color: black;
            mask-image: url("assets/return-button.svg");
            mask-position: center;
            mask-repeat: no-repeat;
            mask-size: 100%;
            display: inline-block;
            width: 12px;
            height: 12px;
            margin-right: 5px;
        }

        &:hover{
            color: $link_hover_color;

            &:before {
                    background-color: $link_hover_color;
            }
        }
    }
}

.book_list{
    position: relative;
}

.add_book_link {
    position: absolute;
    top: 0;
    right: 0; 

    a {
        @include button-appearance;
        padding-left: 30px;
        text-decoration: none;
        color: #fff;
        
        &::before {
            content: "+";
            position: absolute;
            left: 10px;
        }
    }
}

.list{
    .item {
        display: flex;

        &:not(:last-child) {
            border-bottom: 1px solid grey;
        }

        .title {
            flex: 1 1 auto;
            padding: $margin_or_padding_base 0;
        }
    }

    .actions {
        flex: 0 0 auto;
        display: flex;
        align-items: center;

        .button {
            border-width: 0px;
            border-radius: 50%;
            color: white;
            background-color: $button_background_color;
            background-clip: border-box;
            cursor: pointer;
            width: 35px;
            height: 35px;
            margin-left: 10px;
            /*make relative and assign z-index as it contains positioned element for icons displaying and
            may contain link which should be in front of background, for background smaller z-index will be set*/
            position: relative;
            z-index: 20;

            //css for creating ::before pseudo element which serves as background for edit, delete buttons
            @mixin action-button-background($background-image) {
                content: "";
                mask-image: url($background-image);
                mask-position: center;
                mask-repeat: no-repeat;
                mask-size: 20px;
                background-color: white;
                display: block;
                width: 100%;
                height: 100%;
                position: absolute;
                top: 0;
                z-index: -10;
            }

            &.edit {
                &::before {
                    @include action-button-background("assets/edit.svg");
                }
            }

            &.delete {
                &::before {
                    @include action-button-background("assets/delete.svg");
                }
            }

            &:hover {
                background-color: $button_hover_background_color;
            }

            //any links inside rounded container should fill the container div
            a {
                display: block;
                width: 100%;
                height: 100%;
                border-radius: 50%;
            }

        }


    }
}

.overlay_for_modal_dialog{
    position: fixed;
    inset: 0px;
    z-index: 120;
    background-color: rgba(0, 0, 0, 0.65);
}
.modal_dialog{
    position: fixed;
    inset: 0px;
    z-index: 120;
    overflow: auto;

    .container{
        display: flex;
        width: 100%;
        min-height: 100%;
        align-items: flex-start;
        justify-content: center;      
    }

    .body{
        display: flex;
        flex-direction: column;
        border-width: 0px;
        border-radius: $modal-border-radius;
        margin-top: 30px;
        width: 460px;
        background-color: white;
    } 

    .content{
        text-align: center;
        padding: 30px;
    }

    .controls{
        padding: 40px 80px;
        display: flex;
        flex-direction: column;
    }

    button{
        @include button-appearance;
    }
    

    .button_cancel{
        display: flex;
        justify-content: center;
        cursor: pointer;
        padding: $button-padding;
        margin-top: $margin_or_padding_base;
        background-color: white;
        color: rgb(70, 170, 233);

        &:hover{
            color: rgb(0, 118, 192);
        }
        
    }
}


.create_book .info_message{
    margin-bottom: $margin_or_padding_base * 2;
}

div.table{
    margin-bottom: $margin_or_padding_base * 2;

    .row{
        display: flex;
        :first-child{
            flex: 0 0 120px;
            font-weight: bold;
        }
        > div{
            padding: 0 $margin_or_padding_base $margin_or_padding_base 0;
         }
    }
}

form{
    max-width: 700px;

    .field{
        margin-bottom: 25px;
    }

    textarea, [type="text"]{
        width: 100%;
    }

    textarea{
        resize: none;
    }

    .input_error{
        padding: 2px 0 0 5px;
        position: absolute; //don't shift elements below when displayed
        color: red;
    }
}

input, textarea{
    display: block;
    padding: 10px;
    border: 1px solid rgb(229, 231, 235);
    border-radius: 8px;
}

textarea:focus, [type="text"]:focus{
    //box-shadow: rgb(255, 255, 255) 0px 0px 0px 0px, rgb(63, 131, 248) 0px 0px 0px 1px, rgba(0, 0, 0, 0) 0px 0px 0px 0px;
    border-color:rgb(107, 114, 128);
    outline: none;
}

label{
    display: block;
    margin-bottom: 5px;
    font-weight: bold;

    &::after{
        content: ":";
        //display: inline-block;
        //margin-left: 3px;
    }
}

.load_indicator{
    //when visible prevent content shifting below element
    position: absolute;
}
